import pandas as pd
import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from matplotlib import pyplot as plt
from sklearn.decomposition import PCA

iris = load_iris()
# X = iris.data  # Features: sepal/petal length and width
# y = iris.target  # Labels: setosa, versicolor, virginica
#print(f"Feature names: {iris.feature_names}")
#print(f"Target names: {iris.target_names}")
data = pd.read_csv("Iris.csv")
X = data.iloc[:, :-1]  # Feature columns
y = data.iloc[:, -1]   # Target column
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

# Classification Report
print("Classification Report:\n", classification_report(y_test, y_pred))

# Confusion Matrix
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

# Reduce dimensions for visualization
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

# Use iris.target instead of y for color mapping
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=iris.target, cmap='viridis') 
plt.title("Iris Data Visualization")
plt.xlabel("PCA Component 1")
plt.ylabel("PCA Component 2")
plt.colorbar()
plt
